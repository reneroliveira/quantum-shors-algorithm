{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Shor's Algorithm and Quantum Computing The security of RSA encryption as we briefly descrive below, is based on the computational dificultty to factor large numbers. The best known algorithm, General Number Field Sieve perform this task in sub-exponential time \\(O\\left(e^{1.9(\\log N)^{1/3}(\\log\\log N)^{2/3}}\\right)\\) , where \\(N\\) is the number being factored, (then \\(\\log N\\) would be the order of the number of input bits) In 1994, Peter Shor came up with a Las Vegas algorithm for prime factorization and discrete logarithms, that take advantage of quantum computation to achieve a polynomial complexity in the number of bits, which is \\(O\\left((\\log N)^2(\\log\\log N)(\\log \\log\\log N)\\right)\\) . RSA Preliminaries mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#shors-algorithm-and-quantum-computing","text":"The security of RSA encryption as we briefly descrive below, is based on the computational dificultty to factor large numbers. The best known algorithm, General Number Field Sieve perform this task in sub-exponential time \\(O\\left(e^{1.9(\\log N)^{1/3}(\\log\\log N)^{2/3}}\\right)\\) , where \\(N\\) is the number being factored, (then \\(\\log N\\) would be the order of the number of input bits) In 1994, Peter Shor came up with a Las Vegas algorithm for prime factorization and discrete logarithms, that take advantage of quantum computation to achieve a polynomial complexity in the number of bits, which is \\(O\\left((\\log N)^2(\\log\\log N)(\\log \\log\\log N)\\right)\\) .","title":"Shor's Algorithm and Quantum Computing"},{"location":"#rsa-preliminaries","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"RSA Preliminaries"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"intro-quantum/","text":"Introduction to Quantum Computing Qubits, dirac notation, measurements, bloch sphere, quantum circuits, q-sphere","title":"Introduction to Quantum Computing"},{"location":"intro-quantum/#introduction-to-quantum-computing","text":"Qubits, dirac notation, measurements, bloch sphere, quantum circuits, q-sphere","title":"Introduction to Quantum Computing"},{"location":"qft/","text":"Quantum Fourier Transform","title":"Quantum Fourier Transform"},{"location":"qft/#quantum-fourier-transform","text":"","title":"Quantum Fourier Transform"},{"location":"quantum-shors/","text":"Quantum Shor's Algorithm","title":"Quantum Shor's Algorithm"},{"location":"quantum-shors/#quantum-shors-algorithm","text":"","title":"Quantum Shor's Algorithm"},{"location":"shors-algorithm/","text":"Shor's Algorithm Description of the algorithm, mathematical statements and proofs. \\(\\dfrac{\\pi}{2}\\) import markdown md = markdown.Markdown(extensions=['pymdownx.arithmatex'])","title":"Shor's Algorithm"},{"location":"shors-algorithm/#shors-algorithm","text":"Description of the algorithm, mathematical statements and proofs. \\(\\dfrac{\\pi}{2}\\) import markdown md = markdown.Markdown(extensions=['pymdownx.arithmatex'])","title":"Shor's Algorithm"}]}